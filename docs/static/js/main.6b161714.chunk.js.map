{"version":3,"sources":["images/logo.png","components/Header.js","components/Filters/FilterName.js","components/Filters/FilterGender.js","components/Filters/FilterStatus.js","components/Filters/FilterSort.js","components/Extras/Reset.js","components/Filters/Filters.js","images/dead-icon.png","images/unknown.jpeg","components/CharacterCard.js","images/not-found-character.png","components/Extras/NotFound.js","components/CharacterList.js","components/CharacterDetail.js","images/loading.gif","components/Extras/Loading.js","images/server-error.png","components/Extras/ServerError.js","images/page-not-found.png","components/Extras/PageNotFound.js","images/missing-character.png","components/Extras/MissingCharacter.js","components/Footer.js","components/App.js","services/localstorage.js","services/api.js","index.js"],"names":["Header","className","src","logo","alt","FilterName","props","htmlFor","id","name","onChange","ev","data","currentTarget","value","handleFilters","filterName","FilterGender","filterGender","FilterStatus","filterStatus","FilterAlphabet","type","checked","isSortedByName","Reset","onClick","handleReset","Filters","onSubmit","preventDefault","CharacterCard","image","species","status","to","icon","defaultProps","unkwnon","NotFound","notFound","CharacterList","getCharacterList","map","character","length","isLoading","CharacterDetail","origin","episodes","Loading","loading","ServerError","serverError","PageNotFound","pageNotFound","MissingCharacter","missingCharacter","Footer","href","target","dataLocal","JSON","parse","localStorage","getItem","gender","order","getFromLocalStorage","App","useState","setServerError","setIsLoading","characters","setCharacters","setFilterName","setFilterGender","setFilterStatus","setIsSortedByName","useEffect","fetch","then","response","ok","json","results","catch","isOrdered","filters","toLowerCase","setItem","stringify","setLocalStorage","exact","path","filteredCharacters","filter","includes","sort","a","b","filterCharacthers","component","characterId","match","params","foundCharacter","find","parseInt","episode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b161714.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.de13d484.png\";","import logo from '../images/logo.png';\r\nimport '../stylesheets/components/Header.scss';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"Header\">\r\n      <img className=\"Header__img\" src={logo} alt=\"Rick and Morty logo\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction FilterName(props) {\r\n  const handleChange = (ev) => {\r\n    const data = {\r\n      name: ev.currentTarget.name,\r\n      value: ev.currentTarget.value,\r\n    };\r\n    props.handleFilters(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"filterName\">Name</label>\r\n      <input\r\n        className=\"Filters__input Filters__input--name\"\r\n        id=\"filterName\"\r\n        name=\"name\"\r\n        onChange={handleChange}\r\n        value={props.filterName}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilterName.propTypes = {\r\n  handleFilters: PropTypes.func.isRequired,\r\n  filterName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FilterName;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction FilterGender(props) {\r\n  const handleChange = (ev) => {\r\n    const data = {\r\n      name: ev.currentTarget.name,\r\n      value: ev.currentTarget.value,\r\n    };\r\n    props.handleFilters(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"gender\">Gender</label>\r\n      <select\r\n        className=\"Filters__input\"\r\n        name=\"gender\"\r\n        id=\"gender\"\r\n        onChange={handleChange}\r\n        value={props.filterGender}\r\n      >\r\n        <option name=\"gender\" value=\"all\">\r\n          All\r\n        </option>\r\n        <option name=\"gender\" value=\"female\">\r\n          Female\r\n        </option>\r\n        <option name=\"gender\" value=\"male\">\r\n          Male\r\n        </option>\r\n        <option name=\"gender\" value=\"unknown\">\r\n          Unknown\r\n        </option>\r\n      </select>\r\n    </>\r\n  );\r\n}\r\n\r\nFilterGender.propTypes = {\r\n  handleFilters: PropTypes.func.isRequired,\r\n  filterGender: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FilterGender;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction FilterStatus(props) {\r\n  const handleChange = (ev) => {\r\n    const data = {\r\n      name: ev.currentTarget.name,\r\n      value: ev.currentTarget.value,\r\n    };\r\n    props.handleFilters(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"gender\">Status</label>\r\n      <select\r\n        className=\"Filters__input\"\r\n        name=\"status\"\r\n        id=\"status\"\r\n        onChange={handleChange}\r\n        value={props.filterStatus}\r\n      >\r\n        <option name=\"status\" value=\"all\">\r\n          All\r\n        </option>\r\n        <option name=\"status\" value=\"alive\">\r\n          Alive\r\n        </option>\r\n        <option name=\"status\" value=\"dead\">\r\n          Dead\r\n        </option>\r\n        <option name=\"status\" value=\"unknown\">\r\n          Unknown\r\n        </option>\r\n      </select>\r\n    </>\r\n  );\r\n}\r\n\r\nFilterStatus.propTypes = {\r\n  handleFilters: PropTypes.func.isRequired,\r\n  filterStatus: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FilterStatus;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction FilterAlphabet(props) {\r\n  const handleChange = (ev) => {\r\n    const data = {\r\n      name: ev.currentTarget.name,\r\n      checked: ev.currentTarget.checked,\r\n    };\r\n    props.handleFilters(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label className=\"Filters__input--orderLabel\" htmlFor=\"order\">\r\n        <input\r\n          className=\"Filters__input--order\"\r\n          id=\"order\"\r\n          type=\"checkbox\"\r\n          value=\"order\"\r\n          name=\"order\"\r\n          onChange={handleChange}\r\n          checked={props.isSortedByName ? true : false}\r\n        />\r\n        <span\r\n          className={props.isSortedByName ? 'Filters__input--orderChecked' : ''}\r\n        ></span>\r\n        Order by name\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nFilterAlphabet.propTypes = {\r\n  handleFilters: PropTypes.func.isRequired,\r\n  isSortedByName: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FilterAlphabet;\r\n","function Reset(props) {\r\n  const handleChange = () => {\r\n    props.handleReset();\r\n  };\r\n\r\n  return (\r\n    <button className=\"Filters__reset\" onClick={handleChange}>\r\n      Reset\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Reset;\r\n","import PropTypes from 'prop-types';\r\nimport FilterName from './FilterName';\r\nimport FilterGender from './FilterGender';\r\nimport FilterStatus from './FilterStatus';\r\nimport FilterAlphabet from './FilterSort';\r\nimport Reset from '../Extras/Reset';\r\nimport '../../stylesheets/components/Filters.scss';\r\n\r\nfunction Filters(props) {\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <form className=\"Filters\" onSubmit={handleSubmit}>\r\n      <FilterName\r\n        handleFilters={props.handleFilters}\r\n        filterName={props.filterName}\r\n      />\r\n      <FilterGender\r\n        handleFilters={props.handleFilters}\r\n        filterGender={props.filterGender}\r\n      />\r\n      <FilterStatus\r\n        handleFilters={props.handleFilters}\r\n        filterStatus={props.filterStatus}\r\n      />\r\n      <FilterAlphabet\r\n        handleFilters={props.handleFilters}\r\n        isSortedByName={props.isSortedByName}\r\n      />\r\n      <Reset handleReset={props.handleReset} />\r\n    </form>\r\n  );\r\n}\r\n\r\nFilters.propTypes = {\r\n  handleFilters: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  filterName: PropTypes.string.isRequired,\r\n  filterGender: PropTypes.string.isRequired,\r\n  filterStatus: PropTypes.string.isRequired,\r\n  isSortedByName: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Filters;\r\n","export default __webpack_public_path__ + \"static/media/dead-icon.b7c3daa8.png\";","export default __webpack_public_path__ + \"static/media/unknown.049210b4.jpeg\";","import { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport icon from '../images/dead-icon.png';\r\nimport unkwnon from '../images/unknown.jpeg';\r\n\r\nfunction CharacterCard(props) {\r\n  const renderIcon = () => {\r\n    return status === 'Dead' ? (\r\n      <img\r\n        className=\"CharacterList__list--icon\"\r\n        src={icon}\r\n        alt=\"This character is no longer alive\"\r\n      />\r\n    ) : null;\r\n  };\r\n\r\n  const { id, image, name, species, status } = props;\r\n  return (\r\n    <Link className=\"CharacterList__link\" to={`/character/${id}`}>\r\n      <article className=\"CharacterList__article\">\r\n        <img\r\n          className=\"CharacterList__list--img\"\r\n          src={image}\r\n          alt={`${name}, Rick and Mortie character`}\r\n        />\r\n        <h3 className=\"CharacterList__list--name\">{name}</h3>\r\n        <ul className=\"CharacterList__list--features\">\r\n          <li className=\"CharacterList__list--species\">Species: {species}</li>\r\n          <li className=\"CharacterList__list--status\">Status:{status}</li>\r\n        </ul>\r\n        {renderIcon()}\r\n      </article>\r\n    </Link>\r\n  );\r\n}\r\n\r\nCharacterCard.defaultProps = {\r\n  image: { unkwnon },\r\n  name: 'Unknown character',\r\n  species: 'Unknown',\r\n  status: 'Unknown',\r\n};\r\n\r\nCharacterCard.propTypes = {\r\n  image: PropTypes.string,\r\n  name: PropTypes.string,\r\n  species: PropTypes.string,\r\n  status: PropTypes.string,\r\n};\r\n\r\nexport default CharacterCard;\r\n","export default __webpack_public_path__ + \"static/media/not-found-character.80dc1a7d.png\";","import '../../stylesheets/extras/NotFound.scss';\r\nimport notFound from '../../images/not-found-character.png';\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <article className=\"NotFound\">\r\n      <img\r\n        className=\"NotFound__img\"\r\n        src={notFound}\r\n        alt=\"No results for your search\"\r\n      />\r\n      <p className=\"NotFound__text\">\r\n        Holly shit, the character you want doesn't exist\r\n      </p>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import PropTypes from 'prop-types';\r\nimport Filters from './Filters/Filters';\r\nimport CharacterCard from './CharacterCard';\r\nimport NotFound from './Extras/NotFound';\r\nimport '../stylesheets/components/CharacterList.scss';\r\n\r\nfunction CharacterList(props) {\r\n  const getCharacterList = props.data.map((character) => {\r\n    const { id, image, name, status, species } = character;\r\n    return (\r\n      <li className=\"CharacterList__list--items\" key={id}>\r\n        <CharacterCard\r\n          id={id}\r\n          image={image}\r\n          name={name}\r\n          species={species}\r\n          status={status}\r\n        />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <main className=\"CharacterList\">\r\n      <h1 className=\"CharacterList__title\">Rick and Morty characters finder</h1>\r\n      <section className=\"CharacterList__section\">\r\n        <Filters\r\n          handleFilters={props.handleFilters}\r\n          handleReset={props.handleReset}\r\n          filterName={props.filterName}\r\n          filterGender={props.filterGender}\r\n          filterStatus={props.filterStatus}\r\n          isSortedByName={props.isSortedByName}\r\n        />\r\n        {!getCharacterList.length && !props.isLoading ? (\r\n          <NotFound />\r\n        ) : (\r\n          <ul className=\"CharacterList__list\">{getCharacterList}</ul>\r\n        )}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nCharacterList.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  handleFilters: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  filterName: PropTypes.string.isRequired,\r\n  filterGender: PropTypes.string.isRequired,\r\n  filterStatus: PropTypes.string.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  isSortedByName: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default CharacterList;\r\n","import { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport '../stylesheets/components/CharacterDetail.scss';\r\n\r\nfunction CharacterDetail(props) {\r\n  const { image, name, species, status, origin, episodes } = props;\r\n  return (\r\n    <div className=\"CharacterDetail__wrapper\">\r\n      <article className=\"CharacterDetail__article\">\r\n        <img\r\n          className=\"CharacterDetail__img\"\r\n          src={image}\r\n          alt={`${name}, Rick and Mortie character`}\r\n        />\r\n        <h3 className=\"CharacterDetail__title\">{name}</h3>\r\n        <ul className=\"CharacterDetail__list\">\r\n          <li className=\"CharacterDetail__list--species\">\r\n            Species: {` ${species}`}\r\n          </li>\r\n          <li className=\"CharacterDetail__list--status\">\r\n            Status:{` ${status}`}\r\n          </li>\r\n          <li className=\"CharacterDetail__list--origin\">\r\n            Origin: {` ${origin}`}\r\n          </li>\r\n          <li className=\"CharacterDetail__list--episodes\">\r\n            Episodes: {episodes}\r\n          </li>\r\n        </ul>\r\n        <Link className=\"CharacterDetail__link\" to=\"/\">\r\n          Go back to all characters\r\n        </Link>\r\n      </article>\r\n    </div>\r\n  );\r\n}\r\n\r\nCharacterDetail.defaultProps = {\r\n  image: 'https://rickandmortyapi.com/api/character/avatar/19.jpeg',\r\n  name: ' Unknown character',\r\n  species: ' Unknown',\r\n  status: ' Unknown',\r\n  origin: ' Unknown',\r\n  episodes: ' Unknown',\r\n};\r\n\r\nCharacterDetail.propTypes = {\r\n  image: PropTypes.string,\r\n  name: PropTypes.string,\r\n  species: PropTypes.string,\r\n  status: PropTypes.string,\r\n  origin: PropTypes.string,\r\n  episodes: PropTypes.number,\r\n};\r\n\r\nexport default CharacterDetail;\r\n","export default __webpack_public_path__ + \"static/media/loading.0bdfa263.gif\";","import '../../stylesheets/extras/Loading.scss';\r\nimport loading from '../../images/loading.gif';\r\n\r\nfunction Loading() {\r\n  return (\r\n    <article className=\"Loading\">\r\n      <img className=\"Loading__gift\" src={loading} alt=\"Loading...\" />\r\n      <p>Loading...</p>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","export default __webpack_public_path__ + \"static/media/server-error.ed9fa0be.png\";","import '../../stylesheets/extras/ServerError.scss';\r\nimport serverError from '../../images/server-error.png';\r\n\r\nfunction ServerError() {\r\n  return (\r\n    <article className=\"ServerError\">\r\n      <img className=\"ServerError__img\" src={serverError} alt=\"Server error\" />\r\n      <p>The server doesn't feel like working...</p>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default ServerError;\r\n","export default __webpack_public_path__ + \"static/media/page-not-found.65b57cd0.png\";","import { Link } from 'react-router-dom';\r\nimport '../../stylesheets/extras/PageNotFound.scss';\r\nimport pageNotFound from '../../images/page-not-found.png';\r\n\r\nfunction PageNotFound() {\r\n  return (\r\n    <article className=\"PageNotFound\">\r\n      <img\r\n        className=\"PageNotFound__img\"\r\n        src={pageNotFound}\r\n        alt=\"No results for your search\"\r\n      />\r\n      <p className=\"PageNotFound__text\">\r\n        Uh, you are trying to navegate to a page I haven't developed\r\n      </p>\r\n      <Link className=\"PageNotFound__link\" to=\"/\">\r\n        Go back home\r\n      </Link>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default PageNotFound;\r\n","export default __webpack_public_path__ + \"static/media/missing-character.ffae77e9.png\";","import { Link } from 'react-router-dom';\r\nimport '../../stylesheets/extras/MissingCharacter.scss';\r\nimport missingCharacter from '../../images/missing-character.png';\r\n\r\nfunction MissingCharacter() {\r\n  return (\r\n    <article className=\"MissingCharacter\">\r\n      <div className=\"MissingCharacter__wrapper\">\r\n        <img\r\n          className=\"MissingCharacter__img\"\r\n          src={missingCharacter}\r\n          alt=\"No results for your search\"\r\n        />\r\n        <p className=\"MissingCharacter__text\">\r\n          Holly shit, the character you want doesn't exist\r\n        </p>\r\n      </div>\r\n      <Link className=\"MissingCharacter__link\" to=\"/\">\r\n        Go back to all characters\r\n      </Link>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default MissingCharacter;\r\n","import '../stylesheets/components/Footer.scss';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"Footer\">\r\n      <p className=\"Footer__text\">\r\n        Developed by{' '}\r\n        <a\r\n          className=\"Footer__link\"\r\n          href=\"https://www.github.com/evaferrerasbr\"\r\n          target=\"blank\"\r\n        >\r\n          Eva Ferreras\r\n        </a>\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { getDataFromApi } from '../services/api';\nimport { setLocalStorage, getFromLocalStorage } from '../services/localstorage';\nimport { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport CharacterList from './CharacterList';\nimport CharacterDetail from './CharacterDetail';\nimport Loading from './Extras/Loading';\nimport ServerError from './Extras/ServerError';\nimport PageNotFound from './Extras/PageNotFound';\nimport MissingCharacter from './Extras/MissingCharacter';\nimport Footer from './Footer';\n\nconst dataLocal = getFromLocalStorage();\n\nfunction App() {\n  //state\n  const [serverError, setServerError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [characters, setCharacters] = useState([]);\n  const [filterName, setFilterName] = useState(dataLocal.name);\n  const [filterGender, setFilterGender] = useState(dataLocal.gender);\n  const [filterStatus, setFilterStatus] = useState(dataLocal.status);\n  const [isSortedByName, setIsSortedByName] = useState(dataLocal.order);\n\n  //API\n  //checks the server response and shows a component named ServerError if there has been an error. If it's not, it saves the info in the state\n  useEffect(() => {\n    getDataFromApi().then((data) => {\n      if (data) {\n        setCharacters(data);\n        setIsLoading(false);\n      } else {\n        setServerError(true);\n      }\n    });\n  }, []);\n\n  //LOCAL STORAGE\n  //we send the filters info as parameters to the service localstorage.js\n  useEffect(() => {\n    setLocalStorage(filterName, filterGender, filterStatus, isSortedByName);\n  });\n\n  //HANDLERS\n  //saves the filters info in the state when an input changes\n  const handleFilters = (data) => {\n    if (data.name === 'name') {\n      setFilterName(data.value);\n    }\n    if (data.name === 'gender') {\n      setFilterGender(data.value);\n    }\n    if (data.name === 'status') {\n      setFilterStatus(data.value);\n    }\n    if (data.name === 'order') {\n      setIsSortedByName(data.checked);\n    }\n  };\n\n  //resets the users search\n  const handleReset = () => {\n    setFilterName('');\n    setFilterGender('all');\n    setFilterStatus('all');\n    setIsSortedByName(false);\n  };\n\n  //FILTERS\n  //creates an array with the elements that matches the users search and sort elements by name if the user has selected that option\n  const filterCharacthers = () => {\n    const filteredCharacters = characters\n      .filter((character) => {\n        return character.name.toLowerCase().includes(filterName.toLowerCase());\n      })\n      .filter((character) => {\n        return (\n          filterGender === 'all' ||\n          character.gender.toLowerCase() === filterGender\n        );\n      })\n      .filter((character) => {\n        return (\n          filterStatus === 'all' ||\n          character.status.toLowerCase() === filterStatus\n        );\n      });\n    if (isSortedByName) {\n      filteredCharacters.sort((a, b) => {\n        if (a.name > b.name) {\n          return 1;\n        }\n        if (a.name < b.name) {\n          return -1;\n        }\n        return 0;\n      });\n    }\n    return filteredCharacters;\n  };\n\n  //RENDER\n  //renders the details of the character with an id that matches the id of the selected route\n  const renderDetail = (props) => {\n    const characterId = props.match.params.id;\n    const foundCharacter = characters.find((character) => {\n      return character.id === parseInt(characterId);\n    });\n    if (foundCharacter) {\n      const { image, name, species, status, origin, episode } = foundCharacter;\n      return (\n        <CharacterDetail\n          image={image}\n          name={name}\n          species={species}\n          status={status}\n          origin={origin.name}\n          episodes={episode.length}\n        />\n      );\n    } else {\n      return <MissingCharacter />;\n    }\n  };\n\n  //when there is any error in the server\n  const renderServerError = () => {\n    return serverError === true ? <ServerError /> : null;\n  };\n\n  //while fetch\n  const renderLoading = () => {\n    return isLoading === true ? <Loading /> : null;\n  };\n\n  //jsx\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <CharacterList\n            data={filterCharacthers()}\n            handleFilters={handleFilters}\n            handleReset={handleReset}\n            filterName={filterName}\n            filterGender={filterGender}\n            filterStatus={filterStatus}\n            isLoading={isLoading}\n            isSortedByName={isSortedByName}\n          />\n        </Route>\n        <Route path=\"/character/:id\" component={renderDetail} />\n        <Route path=\"/\" component={PageNotFound} />\n      </Switch>\n      {renderServerError()}\n      {renderLoading()}\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const getFromLocalStorage = () => {\r\n  const dataLocal = JSON.parse(localStorage.getItem('filters'));\r\n  return dataLocal !== null\r\n    ? dataLocal\r\n    : {\r\n        name: '',\r\n        gender: 'all',\r\n        status: 'all',\r\n        order: false,\r\n      };\r\n};\r\n\r\nconst setLocalStorage = (filterName, filterGender, filterStatus, isOrdered) => {\r\n  const filters = {\r\n    name: filterName,\r\n    gender: filterGender.toLowerCase(),\r\n    status: filterStatus.toLowerCase(),\r\n    order: isOrdered,\r\n  };\r\n  localStorage.setItem('filters', JSON.stringify(filters));\r\n};\r\n\r\nexport { setLocalStorage, getFromLocalStorage };\r\n","const getDataFromApi = () => {\r\n  return fetch('https://rickandmortyapi.com/api/character')\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw response;\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      return data.results;\r\n    })\r\n    .catch(() => {});\r\n};\r\n\r\nexport { getDataFromApi };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from '../src/components/App';\nimport './stylesheets/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}